name: push to AWS ECR sub-branch:TechdemoApp-GitAction

on:
  push:
    branches:
      - TechdemoApp-GitAction

jobs:
  build-and-push-frontend:
    runs-on: ubuntu-latest
    timeout-minutes: 20  # Increase the timeout as needed
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1

    - name: Verify Docker Login
      run: |
        docker info

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push the image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: techdome-application-frontend
        IMAGE_TAG: v1
      
      run: |
          aws --version
          docker --version
          set -x  # Enable debugging
          # Build a docker container and push it to ECR 
          echo "Step:1 create build with Tag..."
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f Techdome-frontend/Dockerfile .
  
          # Print information about the built image
          echo "Docker images after build:"
          docker images $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

          echo "Step:2 Pushing Frontend image to ECR..."
          echo "Docker images before push:"
          docker images

          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG || (echo "Docker push failed"; exit 1)

          echo "Docker images after push:"
          docker images

          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
